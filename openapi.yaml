openapi: 3.0.0
info:
  title: Financial Advisor Backend API
  description: Backend service for the financial advisor frontend.
  version: "1.0"
servers:
  - url: http://localhost:8081
    description: Development server
paths:
  /users/login:
    post:
      summary: User Login
      description: Authenticates a user and returns a token if successful.
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  type: string
                  description: The username of the user.
                  example: "test@example.com"
                password:
                  type: string
                  description: The password for the user account.
                  example: "your_password"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: HTTP status code
                    example: 200
                  message:
                    type: string
                    description: Status message
                    example: "Login successful"
                  data:
                    type: object
                    properties:
                      token_type:
                        type: string
                        description: Type of the token
                        example: "Bearer"
                      scope:
                        type: string
                        description: Permissions granted
                        example: "5d7a7727-2a96-45ba-a82f-275e573cda4e/User.Read 5d7a7727-2a96-45ba-a82f-275e573cda4e/.default"
                      expires_in:
                        type: integer
                        description: Token expiration time in seconds
                        example: 5397
                      ext_expires_in:
                        type: integer
                        description: Extended expiration time in seconds
                        example: 5397
                      access_token:
                        type: string
                        description: The JWT access token
                        example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIs..."
                      refresh_token:
                        type: string
                        description: The refresh token
                        example: "0.Ab4ANhzjhUbV_U6CEB2Go6EXQCd3el2WKrpFqC8nXlc82k6..."
                      id_token:
                        type: string
                        description: The ID token
                        example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIs..."
        '401':
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid username or password."
        '400':
          description: Bad Request - Missing parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Username and password are required."
